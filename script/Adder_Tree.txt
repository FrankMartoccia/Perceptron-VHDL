library IEEE;
use IEEE.std_logic_1164.all;
use ieee.numeric_std.all;

entity Adder_Tree_tb is
end Adder_Tree_tb;

architecture beh of Adder_Tree_tb is

    constant clk_period     : time := 100 ns; -- Clock period
	
	component Adder_Tree
		port(
			l1_s1_in1 : in std_logic_vector(16 downto 0);
			l1_s1_in2 : in std_logic_vector(16 downto 0);
			l1_s2_in1 : in std_logic_vector(16 downto 0);
			l1_s2_in2 : in std_logic_vector(16 downto 0);
			l1_s3_in1 : in std_logic_vector(16 downto 0);
			l1_s3_in2 : in std_logic_vector(16 downto 0);
			l1_s4_in1 : in std_logic_vector(16 downto 0);
			l1_s4_in2 : in std_logic_vector(16 downto 0);
			l1_s5_in1 : in std_logic_vector(16 downto 0);
			l1_s5_in2 : in std_logic_vector(16 downto 0);
			
			clk: in std_logic;
			rst: in std_logic;
			b  : in std_logic_vector(8 downto 0); 
        
			sum: out std_logic_vector(20 downto 0) 		
		);
	end component Adder_Tree;
	
	-- Signals used in the TB 
	signal l1_s1_in1_tb : in std_logic_vector(16 downto 0):= (others => '0');
	signal l1_s1_in2_tb : in std_logic_vector(16 downto 0):= (others => '0');
	signal l1_s2_in1_tb : in std_logic_vector(16 downto 0):= (others => '0');
	signal l1_s2_in2_tb : in std_logic_vector(16 downto 0):= (others => '0');
	signal l1_s3_in1_tb : in std_logic_vector(16 downto 0):= (others => '0');
	signal l1_s3_in2_tb : in std_logic_vector(16 downto 0):= (others => '0');
	signal l1_s4_in1_tb : in std_logic_vector(16 downto 0):= (others => '0');
	signal l1_s4_in2_tb : in std_logic_vector(16 downto 0):= (others => '0');
	signal l1_s5_in1_tb : in std_logic_vector(16 downto 0):= (others => '0');
	signal l1_s5_in2_tb : in std_logic_vector(16 downto 0):= (others => '0');
	
	signal rst_tb: in std_logic;
	signal b_tb  : in std_logic_vector(8 downto 0); 
        
	signal sum_tb: out std_logic_vector(20 downto 0);
	
	signal clk     : std_logic := '0';
	signal testing : boolean := true;
	
	begin
		clk <= not clk after clk_period/2 when testing else '0';
		
		dut: Adder_Tree
		port map (
			l1_s1_in1 => l1_s1_in1_tb,
			l1_s1_in2 => l1_s1_in2_tb,
			l1_s2_in1 => l1_s2_in1_tb,
			l1_s2_in2 => l1_s2_in2_tb,
			l1_s3_in1 => l1_s3_in1_tb,
			l1_s3_in2 => l1_s3_in2_tb,
			l1_s4_in1 => l1_s4_in1_tb,
			l1_s4_in2 => l1_s4_in2_tb,
			l1_s5_in1 => l1_s5_in1_tb,
			l1_s5_in2 => l1_s5_in2_tb,
			
			clk => clk,
			rst => rst_tb,
			b   => b_tb,
			sum => sum_tb
			);
		
		stimulus : process
			begin
				testing  <= false;
        end process;
end beh;
	
	